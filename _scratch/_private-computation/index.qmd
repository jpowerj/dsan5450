---
title: "Week 6: Anonymity, Privacy-Preserving Computation"
subtitle: "*DSAN 5450: Data Ethics and Policy*<br><span class='subsubtitle'>Spring 2024, Georgetown University</span>"
author: "Jeff Jacobs"
institute: "<a href='mailto:jj1088@georgetown.edu' target='_blank'>`jj1088@georgetown.edu`</a>"
bibliography: "../_DSAN5450.bib"
date: 2024-02-21
date-format: full
lecnum: 6
#categories:
#  - "Class Sessions"
format:
  revealjs:
    df-print: kable
    footer: "DSAN 5450 Week 6: Privacy-Preserving Computation"
    output-file: "slides.html"
    html-math-method: mathjax
    theme: ["../_jjslides.scss"]
    scrollable: true
    slide-number: true
    simplemenu:
      flat: true
      barhtml:
        header: "<div class='menubar'><span style='position: absolute; left: 8; padding-left: 8px;'><a href='./index.html'>&larr; Return to Notes</a></span><ul class='menu'></ul></div>"
      scale: 0.5
    revealjs-plugins:
      - simplemenu
  html:
    df-print: kable
    output-file: "index.html"
    html-math-method: mathjax
---

::: {.content-visible unless-format="revealjs"}

<center>
<a class="h2" href="./slides.html" target="_blank">Open slides in new window &rarr;</a>
</center>

:::

# Context-Free $\rightarrow$ Context-Sensitive

## Impossibility Results

* tldr: We cannot possibly achieve all three of **equalized positive rates** (often also termed "anti-classification"), classification **parity**, and **calibration** (regardless of **base rates**)
* More alarmingly: We can't even achieve both classification **parity** and **calibration**, except in the special case of **equal base rates**

## "Impossibility" vs. Impossibility {.smaller .crunch-title}

* Sometimes "impossibility results" are, for all intents and purposes, mathematical curiosities: often there's some **pragmatic** way of getting around them
* Example: "Arrow's Impossibility Theorem"
  * [In theory] It is mathematically impossible to **aggregate individual preferences** into **societal preferences**
  * [The catch] True only if people are restricted to **ordinal preferences**: "I prefer $x$ to $y$." No more information allowed
  * [The way around it] Allow people to indicate the **magnitude** of their preferences: "I prefer $x$ 5 times more than $y$"
* In this case, though, there are direct and (often) unavoidable real-world barriers that fairness impossibility imposes ðŸ˜•

## Arrow's Impossibility Theorem {.crunch-title .smaller .crunch-ul}

* Aziza, Bogdan, and Charles are competing in a **fitness test** with four events. Goal: determine who is **most fit overall**

| | Run | Jump | Hurdle | Weights |
| - | - | - | - | - |
| Aziza | 10.1" | 6.0' | 40" | 150 lb |
| Bogdan | 9.2" | 5.9' | 42" | 140 lb |
| Charles | 10.0" | 6.1' | 39" | 145 lb |

* We **can** rank unambiguously on **individual events**: **Jump**: Charles $\succ_J$ Aziza $\succ_J$ Bogdan
* Now, **axioms** for aggregation:
  * $\text{WP}$ (Weak Pareto Optimality): if $x \succ_i y$ for all events $i$, $x \succ y$
  * $\text{IIA}$ (Independence of Irrelevant Alternatives): If a fourth competitor enters, but Aziza and Bogdan still have the same relative standing on all events, their relative standing overall should not change
* Long story short: only aggregation that can satisfy these is "dictatorship": choose one event, give it importance of 100%, the rest have importance 0% ðŸ˜°

## ProPublica vs. Northpointe {.smaller .crunch-title}

* This is... an example with 1000s of books and papers and discussions around it! (A red flag ðŸš©, since, obsession with one example may conceal much wider range of issues!)
* But, tldr, Northpointe created a ML algorithm called COMPAS, used by court systems all over the US to predict "risk" of arrestees
* In 2016, ProPublica published results from an investigative report documenting COMPAS's racial discrimination, in the form of violating **equal error rates** between black and white arrestees
* Northpointe responded that COMPAS does **not** discriminate, as it satisfies **calibration**
* People have argued about who is "right" for 8 years, with some progress, but... not a lot

## So... What Do We Do? {.smaller .crunch-title .crunch-ul .crunch-blockquote}

* One option: argue about which of the two definitions is "better" for the next 100 years (what is the best way to give food to the poor?)

> It appears to reveal an unfortunate but inexorable fact about our world: we must choose between two intuitively appealing ways to understand fairness in ML. Many scholars have done just that, defending either ProPublica's or Northpointeâ€™s definitions against what they see as the misguided alternative. [@simons_algorithms_2023]

* Another option: study and then work to ameliorate the social conditions which **force us into** this realm of mathematical impossibility (why do the poor have no food?)

> The impossibility result is about much more than math. [It occurs because] the underlying outcome is distributed unevenly in society. This is a fact about society, not mathematics, and requires engaging with a complex, checkered history of systemic racism in the US. Predicting an outcome whose distribution is shaped by this history requires tradeoffs because the inequalities and injustices are encoded in data---in this case, because America has criminalized Blackness for as long as America has existed.

## Why Not Both?? {.smaller .crunch-title .crunch-ul}

* On the one hand: yes, both! On the other hand: <a hrf='https://en.wikipedia.org/wiki/Argument_to_moderation' target='_blank'>fallacy of the "middle ground"</a>
* We're back at **descriptive vs. normative**:
  * **Descriptively**, given 100 values $v_1, \ldots, v_{100}$, their **mean** may be a good way to summarize, if we have to choose a single number
  * But, **normatively**, imagine that these are **opinions** that people hold about fairness.
  * Now, if it's the US South in 1860 and $v_i$ represents person $i$'s approval of slavery, from a sample of 100 people, then approx. 97 of the $v_i$'s are "does not disapprove" [@rousey_friends_2001] --- in this case, normatively, is the mean $0.97$ the "correct" answer?
* We have another case where, like the "grass is green" vs. "grass ought to be green" example, we cannot just "import" our logical/mathematical tools from the former to solve the latter! (However: this does **not** mean they are **useless**! This is the fallacy of the **excluded middle**, sort of the opposite of the fallacy of the middle ground)
* This is why we have **ethical frameworks** in the first place! Going back to **Rawls**: "97% of Americans think black people shouldn't have rights" &nbsp;$\nimplies$"black people shouldn't have rights", since rights are a **primary good**

# Privacy and Why It Matters {data-stack-name="Privacy"}

## The "Right" to Privacy

* In Theory (Normatively): A **right** is an individual "veto" on a collective decision [@dworkin_taking_1977]
* In Practice (Descriptively): Rights grow out of the barrel of a gun

## All Hope Is Not Lost! {.smaller}

* **Anonymity via Synthetic Datasets**: if identifying info already exists (e.g., in the US Census), we can generate **synthetic datasets** which
  * Have the same distributional properties as the real data, but
  * Cannot be used to identify you
* **$\varepsilon$-Differential Privacy**: Allows us to **quantify** the tradeoff between **accuracy** and **privacy**
* **Homomorphic Cryptography** makes it possible to encode data in such a way that:
  * It can be used to train algorithms, yet
  * It cannot be used to identify you

# Synthetic Datasets {data-name="Synthetic Data"}

* The issue: **conflict** between the benefits of scientific research and the privacy of subjects!
* Synthetic dataset generation escapes this condundrum by creating "fake" data with the same **statistical properties** as the real data
* This was one of the most promising approaches to privacy in computation, upon publication of [@rubin_statistical_1993], but raised the question of how to **ensure** privacy, rather than hoping that fake data is sufficiently different

# $\varepsilon$-Differential Privacy {data-stack-name="Differential Privacy"}

## The Goal {.crunch-title .crunch-quarto-figure}

* Enable **mathematical** analysis of a privacy mechanism, via optimization with respect to the accuracy-privacy tradeoff:

![](images/accuracy_privacy.svg){fig-align="center"}

## Pareto Improvements and the Pareto Frontier {.smaller .title-12}

![](images/pareto.svg){fig-align="center"}

## $\varepsilon$-Differential Privacy Definition

* A privacy mechanism $M$ provides $\varepsilon$-differential privacy if:
  * For all pairs of datasets $x$ and $y$ which differ in the data of one person, and
  * For all (probability-theoretic) events $S$

$$
\Pr(M(x) \in S) \leq e^\varepsilon \Pr(M(y) \in S)
$$

# Privacy-Preserving Computation {data-stack-name="Privacy-Preserving Computation"}

## First Things First: `NAND`

* The irreducible "atom" of computing, it turns out, is the `NAND` operation: the **N**egation of the **`AND`** operation, which we'll denote using [$\barwedge$]{.cb3}:

```{=html}
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$p$"></span></th>
  <th><span data-qmd="$q$"></span></th>
  <th><span data-qmd="$p \wedge q$"></span></th>
  <th class='cb3a-bg'><span data-qmd="$p \barwedge q$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>0</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>0</td>
  <td>1</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>0</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>1</td>
  <td>1</td>
  <td class='cb3a-bg'>0</td>
</tr>
</tbody>
</table>
```

## Why is `NAND` All We Need? {.smaller}

* **Logically**: any boolean function can be decomposed (e.g., in "conjunctive normal form") into [**negation**]{.cb1} (unary) and [**conjunction**]{.cb2} (binary). Here's both, using only `NAND`!

::: {layout="[1,1]" layout-align="center"}

::: {#negation}

<center class='center-head'>
**Negation** ($\neg$)
</center>

```{=html}
<center>
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$p$"></span></th>
  <th class='cb1a-bg'><span data-qmd="$\neg p$"></span></th>
  <th class='cb3a-bg'><span data-qmd="$p \barwedge p$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td class='cb1a-bg'>1</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td class='cb1a-bg'>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
</tbody>
</table>
</center>
```

:::
::: {#conjunction}
<center class='center-head'>
**Conjunction** ($\wedge$)
</center>

```{=html}
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$p$"></span></th>
  <th><span data-qmd="$q$"></span></th>
  <th class='cb2a-bg'><span data-qmd="$p \wedge q$"></span></th>
  <th><span data-qmd="$p \barwedge q$"></span></th>
  <th class='cb3a-bg'><span data-qmd="$\left(p \barwedge q\right) \barwedge \left(p \barwedge q\right)$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>0</td>
  <td class='cb2a-bg'>0</td>
  <td>1</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>0</td>
  <td>1</td>
  <td class='cb2a-bg'>0</td>
  <td>1</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>1</td>
  <td>0</td>
  <td class='cb2a-bg'>0</td>
  <td>1</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>1</td>
  <td>1</td>
  <td class='cb2a-bg'>1</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
</tbody>
</table>
```

:::

:::

## `OR` as a Bonus! {.smaller .crunch-title}

* Since we now have $\neg$ and $\wedge$, we can derive $\vee$!

```{=html}
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$p$"></span></th>
  <th><span data-qmd="$q$"></span></th>
  <th class='cb2a-bg'><span data-qmd="$p \vee q$"></span></th>
  <th><span data-qmd="$\neg p$"></span></th>
  <th><span data-qmd="$\neg q$"></span></th>
  <td><span data-qmd="$\neg p \wedge \neg q$"></span></td>
  <th class='cb3a-bg'><span data-qmd="$\neg\left(\neg p \wedge \neg q\right)$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>0</td>
  <td class='cb2a-bg'>0</td>
  <td>1</td>
  <td>1</td>
  <td>1</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>0</td>
  <td>1</td>
  <td class='cb2a-bg'>1</td>
  <td>1</td>
  <td>0</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>0</td>
  <td class='cb2a-bg'>1</td>
  <td>0</td>
  <td>1</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>1</td>
  <td class='cb2a-bg'>1</td>
  <td>0</td>
  <td>0</td>
  <td>0</td>
  <td class='cb3a-bg'>1</td>
</tr>
</tbody>
</table>
```
* This is encapsulated in **DeMorgan's Laws**:

$$
\begin{align*}
\neg(p \wedge q) &= \neg p \vee \neg q \\
\neg(p \vee q) &= \neg p \wedge \neg q
\end{align*}
$$

## And Lastly: `XOR`

* **Exclusive** or: $p \oplus q$ = "$p$ or $q$ **but not both**"

```{=html}
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$p$"></span></th>
  <th><span data-qmd="$q$"></span></th>
  <th class='cb2a-bg'><span data-qmd="$p \oplus q$"></span></th>
  <th><span data-qmd="$p \vee q$"></span></th>
  <th><span data-qmd="$\neg(p \wedge q)$"></span></th>
  <th class='cb3a-bg'><span data-qmd="$\left(p \vee q) \wedge \neg (p \wedge q\right)$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>0</td>
  <td class='cb2a-bg'>0</td>
  <td>0</td>
  <td>1</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>0</td>
  <td>1</td>
  <td class='cb2a-bg'>1</td>
  <td>1</td>
  <td>1</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>0</td>
  <td class='cb2a-bg'>1</td>
  <td>1</td>
  <td>1</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>1</td>
  <td class='cb2a-bg'>0</td>
  <td>1</td>
  <td>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
</tbody>
</table>
```

## Logic $\rightarrow$ Math {.smaller .crunch-title}

* **Mathematically**: (1) Math can be performed in **base 2**, and (2) If we have a way to [**add**]{.cb1} and [**multiply**]{.cb2} in base 2, we have the basic **algebraic ring** $\mathbb{Z}_2$ used for "doing math"!
* But, let's look at what happens when we do math in $\mathbb{Z}_2$:

::: {layout="[1,1]"}
::: {#addition}

<center class='center-head'>
**Addition** ($+$)
</center>

```{=html}
<center>
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$x$"></span></th>
  <th><span data-qmd="$y$"></span></th>
  <th class='cb1a-bg'><span data-qmd="$x +_{\mathbb{Z}_2} y$"></span></th>
  <th class='cb3a-bg'><span data-qmd="$x \oplus y$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>0</td>
  <td class='cb1a-bg'>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>0</td>
  <td>1</td>
  <td class='cb1a-bg'>1</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>0</td>
  <td class='cb1a-bg'>1</td>
  <td class='cb3a-bg'>1</td>
</tr>
<tr>
  <td>1</td>
  <td>1</td>
  <td class='cb1a-bg'>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
</tbody>
</table>
</center>
```

:::
::: {#multiplication}

<center class='center-head'>
**Multiplication** ($\times$)
</center>

```{=html}
<center>
<table class='centered-table'>
<thead>
<tr>
  <th><span data-qmd="$x$"></span></th>
  <th><span data-qmd="$y$"></span></th>
  <th class='cb2a-bg'><span data-qmd="$x \times_{\mathbb{Z}_2} y$"></span></th>
  <th class='cb3a-bg'><span data-qmd="$x \wedge y$"></span></th>
</tr>
</thead>
<tbody>
<tr>
  <td>0</td>
  <td>0</td>
  <td class='cb2a-bg'>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>0</td>
  <td>1</td>
  <td class='cb2a-bg'>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>1</td>
  <td>0</td>
  <td class='cb2a-bg'>0</td>
  <td class='cb3a-bg'>0</td>
</tr>
<tr>
  <td>1</td>
  <td>1</td>
  <td class='cb2a-bg'>1</td>
  <td class='cb3a-bg'>1</td>
</tr>
</tbody>
</table>
</center>
```

:::
:::

* Takeaway: **Mathematical operations** in $\mathbb{Z}_2$ are **isomorphic** to **logical operators** (over $\text{T}, \text{F}$)!

## Implication for Privacy-Preserving AI {.smaller .crunch-math}

* If we can develop an algorithm allowing **addition** and **multiplication** on **encrypted values**, we can run **any AI algorithm we want** on the data!
* We can (a) input **encrypted data**, then (b) use encrypted-addition and encrypted-multiplication in place of regular addition and multiplication
* Example: in **RSA**, the most widely-used encryption algorithm, $\mathcal{E}(m) = m^e\mod{n}$, so multiplying the **encrypted** values produces the **encrypyed version** of the product!

$$
\begin{align*}
\mathcal{E}(m_1)\times \mathcal{E}(m_2) &= m_1^em_2^e\mod{n} \\
&= (m_1m_2)^e\mod{n} \\
&= \mathcal{E}(m_1 \times m_2)
\end{align*}
$$

* Doesn't preserve **addition**, however:

$$
\begin{align*}
\mathcal{E}(m_1) + \mathcal{E}(m_2) &= m_1^e + m_2^e\mod{n} \\
\mathcal{E}(m_1 + m_2) &= (m_1 + m_2)^e\mod{n}
\end{align*}
$$

## Fully-Homomorphic Encryption: Possible But Difficult {.title-07}

* The gist is: each operation performed on the encrypted data adds a certain amount of **noise**, which means that after several computations the data becomes indecipherable ("Somewhat Homomorphic Encryption")
* **But**, as @gentry_implementing_2011 showed, you can eliminate this problem by periodically "refreshing" the encryption before it reaches the indecipherable state
* More robust and advanced FHE schemes have been developed in the years since, but this was the "it's possible!" result that got the ball rolling

## Application: Zero-Knowledge Proofs and Voting {.smaller .title-09 .crunch-quarto-figure .crunch-figcaption .crunch-iframe}

::: {#fig-voting}

{{< video https://www.youtube.com/watch?v=BYRTvoZ3Rho width="100%" height="600" >}}

<a href='https://www.youtube.com/watch?v=BYRTvoZ3Rho' target='_blank'>https://www.youtube.com/watch?v=BYRTvoZ3Rho</a>
:::

## References

::: {#refs}
:::
